---

name: Build on various Operating Systems

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PAWPAW_CACHE_VERSION: 1
  PAWPAW_SKIP_LTO: 1
  PAWPAW_VERSION: 023bccdeffafc4212292072a1eba78d9e709510e

jobs:
  build_arch_linux_jack1:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: pacman --noconfirm -Syu alsa-lib base-devel celt meson opus readline libsamplerate libsndfile zita-alsa-pcmi zita-resampler
      - name: Install jack1
        run: |
          printf "[pro-audio-legacy]\nServer = https://pkgbuild.com/~dvzrv/repos/pro-audio-legacy/\$arch\n" >> /etc/pacman.conf
          pacman -Syy
          pacman --noconfirm -S jack
      - name: Build jack-example-tools
        run: meson build && ninja -C build
      - name: Install jack-example-tools
        run: ninja -C build install
  build_arch_linux_jack2:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: pacman --noconfirm -Syu alsa-lib base-devel celt meson opus readline libsamplerate libsndfile zita-alsa-pcmi zita-resampler
      - name: Install jack2
        run: pacman --noconfirm -S jack2
      - name: Build jack-example-tools
        run: meson build && ninja -C build
      - name: Install jack-example-tools
        run: ninja -C build install
  build_arch_linux_pipewire_jack:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: pacman --noconfirm -Syu alsa-lib base-devel celt meson opus readline libsamplerate libsndfile zita-alsa-pcmi zita-resampler
      - name: Install pipewire-jack
        run: pacman --noconfirm -S pipewire-jack
      - name: Build jack-example-tools
        run: meson build && ninja -C build
      - name: Install jack-example-tools
        run: ninja -C build install
  build_alpine_linux:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: apk add g++ meson pkgconf alsa-lib-dev jack-dev opus-dev readline-dev libsamplerate-dev libsndfile-dev
      - name: Build jack-example-tools
        run: meson build && ninja -C build
      - name: Install jack-example-tools
        run: ninja -C build install
  build_macos_latest:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install jack meson opus pkg-config readline
      - name: Build jack-example-tools
        run: meson build && ninja -C build
      - name: Install jack-example-tools
        run: ninja -C build install
  build_pawpaw_macos_intel:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/PawPawBuilds
          key: macos-intel-v${{ env.PAWPAW_CACHE_VERSION }}
      - name: Set up dependencies
        run: brew install cmake jq meson
      - name: Bootstrap macOS intel
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
            git -C PawPaw checkout ${{ env.PAWPAW_VERSION}}
          fi
          ./PawPaw/bootstrap-jack2.sh macos && ./PawPaw/.cleanup.sh macos
      - name: Build jack2
        shell: bash
        run: |
          ./PawPaw/build-jack2.sh macos && ./PawPaw/.cleanup.sh macos
      - name: Build jack-example-tools
        shell: bash
        run: |
          pushd PawPaw && source local.env macos && popd
          export CFLAGS+=" -I${PAWPAW_PREFIX}-jack2/usr/local/include"
          export CXXFLAGS+=" -I${PAWPAW_PREFIX}-jack2/usr/local/include"
          export LDFLAGS+=" -L${PAWPAW_PREFIX}-jack2/usr/local/lib"
          export PKG_CONFIG_PATH+=":${PAWPAW_PREFIX}-jack2/usr/local/lib/pkgconfig"
          meson build --prefix "${PAWPAW_PREFIX}-jack2/usr/local" || cat build/meson-logs/meson-log.txt
          ninja -C build
      - name: Install jack-example-tools
        run: |
          pushd PawPaw && source local.env macos && popd
          ninja -C build install
  build_pawpaw_macos_universal:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/PawPawBuilds
          key: macos-universal-v${{ env.PAWPAW_CACHE_VERSION }}
      - name: Set up dependencies
        run: brew install cmake jq meson
      - name: Fix up Xcode
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s /Applications/Xcode_12.3.app
      - name: Bootstrap macOS intel
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
            git -C PawPaw checkout ${{ env.PAWPAW_VERSION}}
          fi
          ./PawPaw/bootstrap-jack2.sh macos-universal && ./PawPaw/.cleanup.sh macos-universal
      - name: Build jack2
        shell: bash
        run: |
          ./PawPaw/build-jack2.sh macos-universal && ./PawPaw/.cleanup.sh macos-universal
      - name: Build jack-example-tools
        shell: bash
        run: |
          pushd PawPaw && source local.env macos-universal && popd
          export CFLAGS+=" -I${PAWPAW_PREFIX}-jack2/usr/local/include"
          export CXXFLAGS+=" -I${PAWPAW_PREFIX}-jack2/usr/local/include"
          export LDFLAGS+=" -L${PAWPAW_PREFIX}-jack2/usr/local/lib"
          export PKG_CONFIG_PATH+=":${PAWPAW_PREFIX}-jack2/usr/local/lib/pkgconfig"
          meson build --prefix "${PAWPAW_PREFIX}-jack2/usr/local" || cat build/meson-logs/meson-log.txt
          ninja -C build
      - name: Install jack-example-tools
        run: |
          pushd PawPaw && source local.env macos-universal && popd
          ninja -C build install
  build_pawpaw_win32:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/PawPawBuilds
          key: win32-v${{ env.PAWPAW_CACHE_VERSION }}
      - name: Fix GitHub's mess
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -y autopoint build-essential curl cmake jq llvm meson mingw-w64 \
            binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386
      - name: Bootstrap win32 cross-compiled
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
            git -C PawPaw checkout ${{ env.PAWPAW_VERSION}}
          fi
          ./PawPaw/bootstrap-jack2.sh win32 && ./PawPaw/.cleanup.sh win32
      - name: Build jack2
        shell: bash
        run: |
          ./PawPaw/build-jack2.sh win32 && ./PawPaw/.cleanup.sh win32
      - name: Build jack-example-tools
        shell: bash
        run: |
          pushd PawPaw && source local.env win32 && popd
          export CFLAGS+=" -I${PAWPAW_PREFIX}-jack2/include"
          export CXXFLAGS+=" -I${PAWPAW_PREFIX}-jack2/include"
          export LDFLAGS+=" -L${PAWPAW_PREFIX}-jack2/lib"
          export PKG_CONFIG_PATH+=":${PAWPAW_PREFIX}-jack2/lib/pkgconfig"
          meson build --prefix "${PAWPAW_PREFIX}-jack2" --cross-file PawPaw/setup/meson/win32.ini || cat build/meson-logs/meson-log.txt
          ninja -C build
      - name: Install jack-example-tools
        run: |
          pushd PawPaw && source local.env win32 && popd
          ninja -C build install
  build_pawpaw_win64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/PawPawBuilds
          key: win64-v${{ env.PAWPAW_CACHE_VERSION }}
      - name: Fix GitHub's mess
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -y autopoint build-essential curl cmake jq llvm meson mingw-w64 \
            binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable
      - name: Bootstrap win64 cross-compiled
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
            git -C PawPaw checkout ${{ env.PAWPAW_VERSION}}
          fi
          ./PawPaw/bootstrap-jack2.sh win64 && ./PawPaw/.cleanup.sh win64
      - name: Build jack2
        shell: bash
        run: |
          ./PawPaw/build-jack2.sh win64 && ./PawPaw/.cleanup.sh win64
      - name: Build jack-example-tools
        shell: bash
        run: |
          pushd PawPaw && source local.env win64 && popd
          export CFLAGS+=" -I${PAWPAW_PREFIX}-jack2/include"
          export CXXFLAGS+=" -I${PAWPAW_PREFIX}-jack2/include"
          export LDFLAGS+=" -L${PAWPAW_PREFIX}-jack2/lib"
          export PKG_CONFIG_PATH+=":${PAWPAW_PREFIX}-jack2/lib/pkgconfig"
          meson build --prefix "${PAWPAW_PREFIX}-jack2" --cross-file PawPaw/setup/meson/win64.ini || cat build/meson-logs/meson-log.txt
          ninja -C build
      - name: Install jack-example-tools
        run: |
          pushd PawPaw && source local.env win64 && popd
          ninja -C build install
